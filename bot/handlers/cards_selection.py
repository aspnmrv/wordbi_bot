from telethon import events, Button
from bot.db_tools import _update_current_user_step
from bot.db import get_user_categories_db, delete_category_for_user
from bot.tools import get_keyboard
from bot.bot_instance import bot

user_selected_delete = {}


@bot.on(events.CallbackQuery(pattern=r"^(delete_categories|mark:|bulk_delete|end)"))
async def handle_cards_selection(event):
    user_id = event.original_update.user_id
    data_filter = event.data.decode("utf-8")

    if data_filter == "delete_categories":
        categories = await get_user_categories_db(user_id)
        if categories:
            await _update_current_user_step(user_id, 904)
            user_selected_delete[user_id] = set()

            selected = user_selected_delete.get(user_id, set())
            buttons = []
            for cat in categories:
                mark = "‚úÖ" if cat in selected else "‚ùå"
                buttons.append([Button.inline(f"{mark} {cat}", data=f"mark:{cat}")])
            buttons.append([Button.inline("–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ üóë", data="bulk_delete")])
            buttons.append([Button.inline("–ù–∞–∑–∞–¥", data="end")])

            await event.client.send_message(
                event.chat_id,
                "–í—ã–±–µ—Ä–∏ –ø–æ–¥–±–æ—Ä–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è. –ì–∞–ª–æ—á–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ç–≤–æ–π –≤—ã–±–æ—Ä üëá",
                buttons=buttons
            )
        else:
            keyboard = await get_keyboard(["–ù–∞–∑–∞–¥"])
            await event.client.send_message(
                event.chat_id,
                "–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥–±–æ—Ä–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è üòî",
                buttons=keyboard
            )

    elif data_filter.startswith("mark:"):
        category = data_filter.split(":", 1)[1]
        selected = user_selected_delete.get(user_id, set())
        if category in selected:
            selected.remove(category)
        else:
            selected.add(category)
        user_selected_delete[user_id] = selected

        categories = await get_user_categories_db(user_id)
        await send_delete_menu(event, user_id, categories)

    elif data_filter == "bulk_delete":
        selected = user_selected_delete.get(user_id, set())
        if selected:
            for category in selected:
                await delete_category_for_user(user_id, category)
            await event.client.send_message(
                event.chat_id,
                f"–£–¥–∞–ª–µ–Ω—ã –ø–æ–¥–±–æ—Ä–∫–∏: {', '.join(selected)} üóë"
            )
        else:
            await event.client.send_message(
                event.chat_id,
                "–¢—ã –Ω–µ –≤—ã–±—Ä–∞–ª –Ω–∏ –æ–¥–Ω–æ–π –ø–æ–¥–±–æ—Ä–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è ü§∑"
            )

        categories = await get_user_categories_db(user_id)
        if categories:
            user_selected_delete[user_id] = set()
            await send_delete_menu(event, user_id, categories)
        else:
            keyboard = await get_keyboard(["–ù–∞–∑–∞–¥"])
            await event.client.send_message(
                event.chat_id,
                "–í—Å–µ –ø–æ–¥–±–æ—Ä–∫–∏ —É–¥–∞–ª–µ–Ω—ã ü•≥",
                buttons=keyboard
            )

    elif data_filter == "end":
        categories = await get_user_categories_db(user_id)
        if categories:
            await _update_current_user_step(user_id, 902)
            buttons = [[Button.inline(cat, data=f"cat:{cat}")] for cat in categories]
            buttons.append([Button.inline("–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–±–æ—Ä–∫–∏ üóë", data="delete_categories")])
            buttons.append([Button.inline("–ù–∞–∑–∞–¥", data="back_to_type")])
            await event.client.send_message(
                event.chat_id,
                "–û–∫–µ–π, –≤–µ—Ä–Ω–µ–º—Å—è –∫ —Ç–≤–æ–∏–º –ø–æ–¥–±–æ—Ä–∫–∞–º üìö\n\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—É—é –ø–æ–¥–±–æ—Ä–∫—É",
                buttons=buttons
            )
        else:
            keyboard = await get_keyboard(["–°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –Ω–∞–±–æ—Ä —Å–ª–æ–≤ üß¨", "–ù–∞–∑–∞–¥"])
            await event.client.send_message(
                event.chat_id,
                "–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥–±–æ—Ä–æ–∫ üòî",
                buttons=keyboard
            )


async def send_delete_menu(event, user_id, categories):
    selected = user_selected_delete.get(user_id, set())
    buttons = []
    for cat in categories:
        mark = "‚úÖ" if cat in selected else "‚ùå"
        buttons.append([Button.inline(f"{mark} {cat}", data=f"mark:{cat}")])
    buttons.append([Button.inline("–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ üóë", data="bulk_delete")])
    buttons.append([Button.inline("–ù–∞–∑–∞–¥", data="end")])

    await event.edit(
        "–í—ã–±–µ—Ä–∏ –ø–æ–¥–±–æ—Ä–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è. –ì–∞–ª–æ—á–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ç–≤–æ–π –≤—ã–±–æ—Ä üëá",
        buttons=buttons
    )

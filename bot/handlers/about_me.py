import os

from telethon import events
from bot.tools import get_keyboard, is_expected_steps
from bot.db_tools import _get_current_user_step, _update_current_user_step
from bot.db import update_data_events_db
from bot.bot_instance import bot
from paths import PATH_DEMO


@bot.on(events.NewMessage(pattern="–û–±–æ –º–Ω–µ üëæ"))
async def about_me(event):
    user_id = event.message.peer_id.user_id
    step = await _get_current_user_step(user_id)

    if await is_expected_steps(user_id, [0]):
        await _update_current_user_step(user_id, 11)
        keyboard = await get_keyboard(["–ù–∞–∑–∞–¥"])
        text = (
            "–•—ç–π!\n\n–Ø –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å —Ü–µ–ª—å—é –ø–æ–º–æ—á—å —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å.\n\n"
            "–í–º–µ—Å—Ç–µ —Å–æ –º–Ω–æ–π —Ç—ã –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–ª–æ–≤ –∏ –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å Ellie AI\n\n"
            "–ó–∞–≥—Ä—É–∂–∞–π —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–º, –∏ —è —Å–æ–∑–¥–∞–º –ø–æ–¥–±–æ—Ä–∫–∏ —Å–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ "
            "–º–æ–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å üôÇ"
        )
        await event.client.send_message(event.chat_id, text, buttons=keyboard)
        if os.path.exists(f"{PATH_DEMO}/first_demo.mp4"):
            await event.client.send_file(
                event.chat_id,
                file=f"{PATH_DEMO}/first_demo.mp4",
                caption="–ê –≤–æ—Ç –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, –∫–∞–∫ –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ª–æ–≤–∞ ü§ó",
                supports_streaming=True
            )
        await update_data_events_db(user_id, "about_me", {"step": step})

from telethon import events

from bot.globals import TOPICS
from bot.tools import get_keyboard, get_proposal_topics, match_topics_name, get_state_markup, is_expected_steps
from bot.db_tools import (
    _update_current_user_step,
    _update_user_states,
    _get_user_states,
    _get_current_user_step
)
from bot.db import update_data_events_db
from telethon.tl.custom import Button
from bot.bot_instance import bot
from bot.decorators import limit_usage


@bot.on(events.NewMessage(pattern="–ù–∞—á–∞—Ç—å üöÄ"))
async def begin(event):
    user_id = event.message.peer_id.user_id
    step = await _get_current_user_step(user_id)

    if await is_expected_steps(user_id, [0, 41, 42, 5821]):
        await _update_current_user_step(user_id, 1)
        keyboard = await get_keyboard(["–ö–∞—Ä—Ç–æ—á–∫–∏ —Å–ª–æ–≤ üß©", "–ß–∞—Ç —Å Ellie ‚ú®", "–ù–∞–∑–∞–¥"])
        text = (
            "–¢—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö —Ä–µ–∂–∏–º–æ–≤:\n\n"
            "1Ô∏è‚É£ –ö–∞—Ä—Ç–æ—á–∫–∏ —Å–ª–æ–≤ üß©: –æ—Ç–ø—Ä–∞–≤–ª—è–π —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–º –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç–æ–º, –∏ —è "
            "—Å–æ–∑–¥–∞–º –ø–æ–¥–±–æ—Ä–∫—É —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –º–æ–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è üéì\n\n"
            "2Ô∏è‚É£ –ß–∞—Ç —Å Ellie AI ‚ú®: —Å –Ω–µ–π –º–æ–∂–Ω–æ –ø–æ–±–æ–ª—Ç–∞—Ç—å, Ellie AI —É—á—Ç–µ—Ç —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å, –∏–Ω—Ç–µ—Ä–µ—Å—ã "
            "–∏ –∏–∑—É—á–∞–µ–º—ã–µ —Å–ª–æ–≤–∞ üôÇ"
        )

        await event.client.send_message(event.sender_id, text, buttons=keyboard)
        await update_data_events_db(user_id, "choose_level", {"step": step, "level": event.message.message})

        await update_data_events_db(user_id, "begin", {"step": 1})

import os

from telethon import events, Button
from bot.tools import get_keyboard, is_expected_steps
from bot.db_tools import _get_current_user_step, _update_current_user_step
from bot.db import update_data_events_db, get_user_categories_db
from bot.bot_instance import bot
from paths import PATH_DEMO


@bot.on(events.NewMessage(pattern="–°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –Ω–∞–±–æ—Ä —Å–ª–æ–≤ üß¨"))
async def create_self_words(event):
    user_id = event.message.peer_id.user_id
    step = await _get_current_user_step(user_id)

    if await is_expected_steps(user_id, [41, 545]):
        await _update_current_user_step(user_id, 52)

        categories = await get_user_categories_db(user_id)

        if len(categories) < 10:
            text = (
                "–ï—Å—Ç—å —Ç—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞ ü§ó \n\n"
                "1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å —Ñ–∞–π–ª (.docx –∏–ª–∏ .txt) —Å–æ —Å–ø–∏—Å–∫–æ–º —Å–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—á–µ—à—å –≤—ã—É—á–∏—Ç—å.\n\n"
                "–§–æ—Ä–º–∞—Ç –≤ —Ñ–∞–π–ª–µ:\n"
                "`trip - –ø–æ–µ–∑–¥–∫–∞`\n`house - –¥–æ–º`\n\n"
                "2Ô∏è‚É£ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–∞ –∑–¥–µ—Å—å.\n\n–ú–æ–∂–Ω–æ —Å—Ä–∞–∑—É —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º:\n"
                "`trip : –ø–æ–µ–∑–¥–∫–∞`\n"
                "`house : –¥–æ–º`\n\n"
                "–ê –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤, —è —Å–∞–º –¥–æ–±–∞–≤–ª—é –ø–µ—Ä–µ–≤–æ–¥:\n`trip`\n`house`\n\n"
                "–ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ –Ω–µ –º–µ–Ω–µ–µ –¥–≤—É—Ö —Å–ª–æ–≤ ü§è\n\n"
                "3Ô∏è‚É£ –ù–∞–ø–∏—à–∏ —Ç–µ–º—É –∏–ª–∏ —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ–º, –∏ —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –∫–∞—Ä—Ç–æ—á–∫–∏. "
                "–£—á—Ç—É —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å —è–∑—ã–∫–∞ üå±\n\n"
                "–ù–∞–ø—Ä–∏–º–µ—Ä:\n`IT, –•–∏–º–∏—è, –î–æ–º–∞—à–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ`\n"
            )
            keyboard = await get_keyboard(["–ù–∞–∑–∞–¥"])
            await event.client.send_message(event.chat_id, text, buttons=keyboard, parse_mode="Markdown")
            if os.path.exists(f"{PATH_DEMO}/second_demo.mp4"):
                await event.client.send_file(
                    event.chat_id,
                    file=f"{PATH_DEMO}/second_demo.mp4",
                    caption="–ê –≤–æ—Ç –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, –∫–∞–∫ –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ª–æ–≤–∞ ü§ó",
                    supports_streaming=True
                )
            await update_data_events_db(user_id, "create_words", {"step": step})
        else:
            keyboard = await get_keyboard(["–ù–∞–∑–∞–¥"])
            text = f"–£ —Ç–µ–±—è —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(categories)} –Ω–∞–±–æ—Ä–æ–≤ —Å–ª–æ–≤, –æ–≥–æ!\n\n" \
                   f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –±–æ–ª—å—à–µ {len(categories)} –Ω–µ–ª—å–∑—è. –£–¥–∞–ª–∏ " \
                   f"–Ω–µ–Ω—É–∂–Ω—ã–µ –≤ —Ä–∞–∑–¥–µ–ª–µ /my_cards -> –ú–æ–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ üôÉ"
            await event.client.send_message(event.chat_id, text, buttons=keyboard)
            await update_data_events_db(user_id, "create_words_error", {"step": step, "error": "too_many_categories"})

from telethon import events

from db_tools import _get_current_user_step, _update_current_user_step
from db import update_data_events_db, get_user_stat_new_words_db, get_user_stat_learned_words_db, get_user_stat_total_db
from tools import get_keyboard, is_expected_steps, draw_words_line_chart, send_user_file_stat, draw_words_category_chart
from bot_instance import bot


@bot.on(events.NewMessage(pattern="/my_stat"))
async def get_my_stat(event):
    user_id = event.message.peer_id.user_id
    step = await _get_current_user_step(user_id)

    # if await is_expected_steps(user_id, [7]):
    # await _update_current_user_step(user_id, 888)
    await update_data_events_db(user_id, "get_stat", {"step": -1})

    cnt_new_words = await get_user_stat_new_words_db(user_id)
    cnt_learned_words = await get_user_stat_learned_words_db(user_id)
    total_words_stat = await get_user_stat_total_db(user_id)

    categories = [row[0].lower() for row in total_words_stat if row[0]]
    words = [row[1] for row in total_words_stat if row[0]]
    learned_words = [row[2] for row in total_words_stat if row[0]]
    shares = [row[3] for row in total_words_stat if row[0]]

    # keyboard = await get_keyboard(["–ö–∞—Ä—Ç–æ—á–∫–∏ —Å–ª–æ–≤ üß©", "–ß–∞—Ç —Å Ellie üí¨"])
    if cnt_new_words:
        dates = [d[0] for d in cnt_new_words]
        viewed_cards = [d[1] for d in cnt_new_words]
        learned_cards = [d[1] for d in cnt_learned_words]

        text = f"–ß—Ç–æ –ø–æ –ø—Ä–æ–≥—Ä–µ—Å—Å—É? üíú\n\n\n" \
               f"–£ —Ç–µ–±—è {sum(viewed_cards)} –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∏\n\n" \
               f"ü¶æ {sum(learned_cards)} —É—Å–ø–µ—à–Ω–æ –∏–∑—É—á–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤\n\n" \
               f"üìä –õ—é–±–∏–º–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {categories[0]}\n\n"
        await event.client.send_message(
            event.chat_id,
            text,
            # buttons=keyboard
        )

        if len(dates) > 1:
            file_viewed_cards = await draw_words_line_chart(cnt_new_words)
            await send_user_file_stat(event, file_viewed_cards, "‚ú®–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ –¥–Ω—è–º")

            file_learned_cards = await draw_words_line_chart(cnt_learned_words)
            await send_user_file_stat(event, file_learned_cards, "‚≠êÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã—É—á–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ –¥–Ω—è–º")
        else:
            await event.client.send_message(
                event.chat_id,
                "–ê —Å–ø—É—Å—Ç—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –∏–∑—É—á–µ–Ω–∏—è —Å–ª–æ–≤, –∫–æ–≥–¥–∞ –Ω–∞–∫–æ–ø—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ, "
                "—É —Ç–µ–±—è –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –≥—Ä–∞—Ñ–∏–∫ —Å –¥–∏–Ω–∞–º–∏–∫–æ–π —Ç–≤–æ–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ üòè\n\n",
                # buttons=keyboard
            )

        if len(categories) > 1:
            file = await draw_words_category_chart(total_words_stat)
            await send_user_file_stat(event, file, "–ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∏–∑—É—á–µ–Ω–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º üìà")
        else:
            await event.client.send_message(
                event.chat_id,
                f"–£ —Ç–µ–±—è {words[0]} –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {categories[0]}\n"
                f"–ò–∑ –Ω–∏—Ö {learned_words[0]} ({shares[0]}% —Å–ª–æ–≤ —Ç—ã —É–∂–µ –≤—ã—É—á–∏–ª üß†",
                # buttons=keyboard
            )
    else:
        await event.client.send_message(
            event.chat_id,
            "–ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Å –ª–∏—á–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π. –ù–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–∑–¥–Ω–æ –Ω–∞—á–∞—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–µ /start üòè",
            # buttons=keyboard
        )
